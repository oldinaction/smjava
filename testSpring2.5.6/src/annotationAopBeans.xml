<?xml version="1.0" encoding="UTF-8"?>

<!-- annotation方式相对于xml方式，要新加几个命名空间，xsd文件；aop也需要加自己的命名空间 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
    
    <!-- 此句相当于初始化了如下4个bean：AutowiredAnnotationBeanPostProcessor,CommonAnnotationBeanPostProcessor,PersistenceAnnotationBeanPostProcessor,RequiredAnnotationBeanPostProcessor -->           
	<context:annotation-config/>
	
	<!-- 到cn.aezo下面的所有类中去找有@component的地方 -->
	<context:component-scan base-package="cn.aezo"></context:component-scan>
	
	<!-- aop自动代理。使用annotation方式的aspectj的aop自动代理 -->
	<aop:aspectj-autoproxy/>	
	
	<!--使用@component @Service @Controller @Repository代替了下面的配置
	<bean id="u1" class="cn.aezo.annotation.dao.impl.UserDAOImpl"/> //初始化这个bean不需要注入其他的bean，因为UserDAOImpl没有其他的类似bean的成员变量
	<bean id="u2" class="cn.aezo.annotation.dao.impl.UserDAOImpl"/>
	<bean id="userService" class="cn.aezo.annotation.service.UserService"/> //初始化这个bean需要UserDAO(或者UserDAOImpl)的一个实例，当使用annotation时此处就不需要写property了，只需在类中注明
	-->
	
	
	
  <!-- more bean definitions go here -->

</beans>