<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
	<display-name>testSSHRegister</display-name>

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>

  	<!-- spring的监听器，此时取找spring的xml配置文件，将里面的所有bean放到容器中以备调用 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- 配置spring监听器要找的xml文件的位置，默认是找/WEB-INF/applicationContext*.xml文件，此处配置后就到src(最终的classpath)目录取找beans.xml文件 -->
	<context-param>
    	<param-name>contextConfigLocation</param-name>
    	<!-- <param-value>/WEB-INF/applicationContext-*.xml,classpath*:applicationContext-*.xml</param-value> -->
		<param-value>classpath:beans.xml</param-value>
	</context-param>
  
  	<!-- 配置Spring的用于解决编码问题的过滤器;要在配置struts2核心的过滤器之前;也可在struts.xml中使用struts.i18n.encoding -->
	<!--
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	-->
  
	<!-- 配置Spring的用于解决懒加载问题的过滤器;要在配置struts2核心的过滤器之前; -->
	<filter>
		<filter-name>OpenSessionInViewFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
		<!-- 默认是sessionFactory，也可在此处自己定义。不写着这个参数的话就要在spring的配置文件(如beans.xml)中的sessionFactory的id/name就要是sessionFactory，因为此拦截器默认找到id="sessionFactory"的sessionFactory由自己管理关闭。 -->
		<init-param>
			<param-name>sessionFactoryBeanName</param-name>
			<param-value>sessionFactory</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>OpenSessionInViewFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
  
 	<!-- struts2的核心拦截器 -->
	<filter>
        <filter-name>struts2</filter-name>
        <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>struts2</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping> 

</web-app>